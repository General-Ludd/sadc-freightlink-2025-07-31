from sqlalchemy import Boolean, Integer, String, Column, Float, Date, DateTime, Enum, func
from models.base import Base
from utils.sast_datetime import get_sast_time

class FTL_SHIPMENT_EXCHANGE(Base):
    __tablename__ = "ftl_shipment_exchanges"

    id = Column(Integer, index=True, primary_key=True)
    automatically_accept_lower_bid = Column(Boolean, default=True)
    allow_carrier_to_book_at_current_or_lower_offer_rate = Column(Boolean, default=True)
    exchange_type = Column(String, default="Open", nullable=False)
    type = Column(String, default="FTL")
    trip_type = Column(String, nullable=False)
    load_type = Column(String, nullable=False)
    shipper_company_id = Column(Integer)
    shipper_user_id = Column(Integer)
    required_truck_type = Column(String, nullable=True)
    equipment_type = Column(String, nullable=True)
    trailer_type = Column(String, nullable=True)
    trailer_length = Column(String, nullable=True)
    minimum_weight_bracket = Column(Integer, nullable=True)
    minimum_git_cover_amount = Column(Integer, nullable=False)
    minimum_liability_cover_amount = Column(Integer, default=0, nullable=True)
    origin_address = Column(String)
    complete_origin_address = Column(String)
    origin_city_province = Column(String)
    origin_country = Column(String)
    origin_region = Column(String)
    destination_address = Column(String)
    complete_destination_address = Column(String)
    destination_city_province = Column(String)
    destination_country = Column(String)
    destination_region = Column(String)
    pickup_date = Column(Date)
    priority_level = Column(String, nullable=True)
    pickup_facility_id = Column(Integer)
    delivery_facility_id = Column(Integer)
    customer_reference_number = Column(String)
    shipment_weight = Column(Integer)
    commodity = Column(String)
    temperature_control = Column(String)
    hazardous_materials = Column(Boolean, nullable=False)
    packaging_quantity = Column(String)
    packaging_type = Column(String)
    pickup_number = Column(String)
    pickup_notes = Column(String)
    delivery_number = Column(String)
    delivery_notes = Column(String)
    distance = Column(Integer, nullable=True)
    estimated_transit_time = Column(String)
    offer_price = Column(Integer)
    backed_offer_price = Column(Integer, nullable=False) ### Update in database
    suggested_price = Column(Integer)
    leading_bid_id = Column(Integer)
    leading_bid_amount = Column(Integer, nullable=True) ### Update in database
    winning_bid_price = Column(Integer, nullable=True)
    number_of_bids_submitted = Column(Integer, default=0)
    route_preview_embed = Column(String)
    auction_status = Column(Enum("Open", "Closed"), default="Open")
    trip_savings = Column(Integer)
    exchange_savings = Column(Integer)
    payment_terms = Column(String)
    created_at = Column(DateTime, server_default=func.now())
    updated_at = Column(DateTime, server_default=func.now(), onupdate=func.now())