from sqlalchemy import Boolean, Column, Integer, Float, String, ForeignKey, DateTime, Enum, Date, Time
from sqlalchemy.sql import func
from sqlalchemy.orm import relationship
from sqlalchemy.dialects.postgresql import ARRAY
from models.base import Base
from datetime import datetime

class Exchange_Ftl_Load_Board(Base):
    __tablename__ = "exchange_ftl_loadboard"

    id = Column(Integer, primary_key=True, index=True)
    exchange_id = Column(Integer, nullable=False)
    automatically_accept_lower_bid = Column(Boolean, default=True)
    type = Column(String)
    trip_type = Column(String, nullable=False)
    load_type = Column(String, nullable=False)
    minimum_weight_bracket = Column(Integer, nullable=False)
    minimum_git_cover_amount = Column(Integer, default=0, nullable=True)
    minimum_liability_cover_amount = Column(Integer, default=0, nullable=True)
    shipment_rate = Column(Integer, nullable=False)
    leading_bid_id = Column(Integer, nullable=True)
    leading_bid_amount = Column(Integer, nullable=True) ###################Update in database
    distance = Column(Integer, nullable=False)
    rate_per_km = Column(Integer, nullable=False)
    rate_per_ton = Column(Integer, nullable=False)
    payment_terms = Column(String, nullable=False)
    payment_date = Column(Date)
    status = Column(Enum("Open", "Closed", "Cancelled"), default="Open")
    required_truck_type = Column(String, nullable=True)
    equipment_type = Column(String, nullable=True)
    trailer_type = Column(String, nullable=True)
    trailer_length = Column(String, nullable=True)
    origin_address = Column(String)
    complete_origin_address = Column(String)
    origin_city_province = Column(String)
    origin_country = Column(String)
    origin_region = Column(String)
    destination_address = Column(String)
    complete_destination_address = Column(String)
    destination_city_province = Column(String)
    destination_country = Column(String)
    destination_region = Column(String)
    route_preview_embed = Column(String)
    pickup_date = Column(Date)
    priority_level = Column(String, nullable=True)
    customer_reference_number = Column(String)
    shipment_weight = Column(Integer)
    commodity = Column(String)
    temperature_control = Column(String)
    hazardous_materials = Column(Boolean, nullable=False)
    packaging_quantity = Column(String)
    packaging_type = Column(String)
    pickup_number = Column(String)
    pickup_notes = Column(String)
    delivery_number = Column(String)
    delivery_notes = Column(String)
    estimated_transit_time = Column(String)
    eta_date = Column(Date)
    eta_window = Column(String)
    pickup_appointment = Column(String)
    pickup_facility_name = Column(String, nullable=True)
    pickup_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    pickup_start_time = Column(Time, nullable=False)
    pickup_end_time = Column(Time, nullable=False)
    pickup_facility_notes = Column(String, nullable=True)
    pickup_first_name = Column(String, nullable=False)
    pickup_last_name = Column(String, nullable=False)
    pickup_phone_number = Column(String, nullable=False)
    pickup_email = Column(String, nullable=False)
    delivery_appointment = Column(String)
    delivery_facility_name = Column(String, nullable=True)
    delivery_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    delivery_start_time = Column(Time, nullable=False)
    delivery_end_time = Column(Time, nullable=False)
    delivery_facility_notes = Column(String, nullable=True)
    delivery_first_name = Column(String, nullable=False)
    delivery_last_name = Column(String, nullable=False)
    delivery_phone_number = Column(String, nullable=False)
    delivery_email = Column(String, nullable=False)
    end_time = Column(DateTime) ###################Update in database
    created_at = Column(DateTime, nullable=False, server_default=func.now())
    updated_at = Column(DateTime, nullable=True, onupdate=func.now())

class Exchange_Ftl_Lane_LoadBoard(Base):
    __tablename__ = "exchange_ftl_lane_loadboard"

    id = Column(Integer, primary_key=True, index=True)
    automatically_accept_lower_bid = Column(Boolean, default=True)
    allow_carrier_to_book_at_current_or_lower_offer_rate = Column(Boolean, default=True)
    exchange_id = Column(Integer, nullable=False)
    type = Column(String)
    trip_type = Column(String, nullable=False)
    load_type = Column(String, nullable=False)
    minimum_weight_bracket = Column(Integer, nullable=False)
    minimum_git_cover_amount = Column(Integer, default=0, nullable=True)
    minimum_liability_cover_amount = Column(Integer, default=0, nullable=True)
    per_shipment_offer_rate = Column(Integer, nullable=False)
    contract_offer_rate = Column(Integer)
    leading_bid_id = Column(Integer, nullable=True)
    leading_per_shipment_offer_bid_amount = Column(Integer, nullable=True)
    leading_contract_offer_bid_amount = Column(Integer, nullable=True)
    number_of_bids_submitted = Column(Integer) ############Update in Database
    distance = Column(Integer, nullable=False)
    rate_per_km = Column(Integer, nullable=False)
    rate_per_ton = Column(Integer, nullable=False)
    payment_terms = Column(String, nullable=False)
    payment_dates = Column(ARRAY(Date), nullable=False)
    status = Column(Enum("Open", "Closed"), default="Open")
    required_truck_type = Column(String, nullable=True)
    equipment_type = Column(String, nullable=True)
    trailer_type = Column(String, nullable=True)
    trailer_length = Column(String, nullable=True)
    origin_address = Column(String)
    complete_origin_address = Column(String)
    origin_city_province = Column(String)
    origin_country = Column(String)
    origin_region = Column(String)
    destination_address = Column(String)
    complete_destination_address = Column(String)
    destination_city_province = Column(String)
    destination_country = Column(String)
    destination_region = Column(String)
    route_preview_embed = Column(String)
    start_date = Column(Date)
    end_date = Column(Date)
    recurrence_frequency = Column(String)
    recurrence_days = Column(String, nullable=False)
    shipments_per_interval = Column(Integer)
    total_shipments = Column(Integer)
    shipment_dates = Column(ARRAY(Date), nullable=False)
    priority_level = Column(String, nullable=True)
    customer_reference_number = Column(String)
    average_shipment_weight = Column(Integer)
    commodity = Column(String)
    temperature_control = Column(String)
    hazardous_materials = Column(Boolean, nullable=False)
    packaging_quantity = Column(String)
    packaging_type = Column(String)
    pickup_number = Column(String)
    pickup_notes = Column(String)
    delivery_number = Column(String)
    delivery_notes = Column(String)
    estimated_transit_time = Column(String)
    pickup_appointment = Column(String)
    pickup_facility_name = Column(String, nullable=True)
    pickup_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    pickup_start_time = Column(Time, nullable=False)
    pickup_end_time = Column(Time, nullable=False)
    pickup_facility_notes = Column(String, nullable=True)
    pickup_first_name = Column(String, nullable=False)
    pickup_last_name = Column(String, nullable=False)
    pickup_phone_number = Column(String, nullable=False)
    pickup_email = Column(String, nullable=False)
    delivery_appointment = Column(String)
    delivery_facility_name = Column(String, nullable=True)
    delivery_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    delivery_start_time = Column(Time, nullable=False)
    delivery_end_time = Column(Time, nullable=False)
    delivery_facility_notes = Column(String, nullable=True)
    delivery_first_name = Column(String, nullable=False)
    delivery_last_name = Column(String, nullable=False)
    delivery_phone_number = Column(String, nullable=False)
    delivery_email = Column(String, nullable=False)
    end_time = Column(DateTime, nullable=True) #####################Update in database
    created_at = Column(DateTime, nullable=False, server_default=func.now())
    updated_at = Column(DateTime, nullable=True, onupdate=func.now())

class Exchange_Power_Load_Board(Base):
    __tablename__ = "exchange_power_loadboard"

    id = Column(Integer, primary_key=True, index=True)
    exchange_id = Column(Integer, nullable=False)
    automatically_accept_lower_bid = Column(Boolean, default=True)
    allow_carrier_to_book_at_current_or_lower_offer_rate = Column(Boolean, default=True)
    type = Column(String)
    trip_type = Column(String, nullable=False)
    load_type = Column(String, nullable=False)
    minimum_weight_bracket = Column(Integer, nullable=False)
    minimum_git_cover_amount = Column(Integer, default=0, nullable=True)
    minimum_liability_cover_amount = Column(Integer, default=0, nullable=True)
    offer_rate = Column(Integer, nullable=False)
    leading_bid_id = Column(Integer, nullable=True)
    leading_bid_amount = Column(Integer, nullable=True)
    distance = Column(Integer, nullable=False)
    rate_per_km = Column(Integer, nullable=False)
    rate_per_ton = Column(Integer, nullable=False)
    payment_terms = Column(String, nullable=False)
    payment_date = Column(Date)
    status = Column(Enum("Open", "Closed"), default="Open")
    required_truck_type = Column(String, nullable=True)
    axle_configuration = Column(String, nullable=True)
    trailer_id = Column(Integer, nullable=False)
    origin_address = Column(String)
    complete_origin_address = Column(String)
    origin_city_province = Column(String)
    origin_country = Column(String)
    origin_region = Column(String)
    destination_address = Column(String)
    complete_destination_address = Column(String)
    destination_city_province = Column(String)
    destination_country = Column(String)
    destination_region = Column(String)
    route_preview_embed = Column(String)
    pickup_date = Column(Date)
    priority_level = Column(String, nullable=True)
    customer_reference_number = Column(String)
    shipment_weight = Column(Integer)
    commodity = Column(String)
    temperature_control = Column(String)
    hazardous_materials = Column(Boolean, nullable=False)
    packaging_quantity = Column(String)
    packaging_type = Column(String)
    pickup_number = Column(String)
    pickup_notes = Column(String)
    delivery_number = Column(String)
    delivery_notes = Column(String)
    estimated_transit_time = Column(String)
    eta_date = Column(Date) #####################Update in database
    eta_window = Column(String) #####################Update in database
    pickup_appointment = Column(String)
    pickup_facility_name = Column(String, nullable=True)
    pickup_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    pickup_start_time = Column(Time, nullable=False)
    pickup_end_time = Column(Time, nullable=False)
    pickup_facility_notes = Column(String, nullable=True)
    pickup_first_name = Column(String, nullable=False)
    pickup_last_name = Column(String, nullable=False)
    pickup_phone_number = Column(String, nullable=False)
    pickup_email = Column(String, nullable=False)
    delivery_appointment = Column(String)
    delivery_facility_name = Column(String, nullable=True)
    delivery_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    delivery_start_time = Column(Time, nullable=False)
    delivery_end_time = Column(Time, nullable=False)
    delivery_facility_notes = Column(String, nullable=True)
    delivery_first_name = Column(String, nullable=False)
    delivery_last_name = Column(String, nullable=False)
    delivery_phone_number = Column(String, nullable=False)
    delivery_email = Column(String, nullable=False)
    exchange_end_time = Column(DateTime, nullable=True) #####################Update in database
    created_at = Column(DateTime, nullable=False, server_default=func.now())
    updated_at = Column(DateTime, nullable=True, onupdate=func.now())


class Exchange_Power_Lane_LoadBoard(Base):
    __tablename__ = "exchange_power_lane_loadboard"

    id = Column(Integer, primary_key=True, index=True)
    exchange_id = Column(Integer, nullable=False)
    type = Column(String)
    trip_type = Column(String, nullable=False)
    load_type = Column(String, nullable=False)
    minimum_weight_bracket = Column(Integer, nullable=False)
    minimum_git_cover_amount = Column(Integer, default=0, nullable=True)
    minimum_liability_cover_amount = Column(Integer, default=0, nullable=True)
    per_shipment_offer_rate = Column(Integer, nullable=False)
    contract_offer_rate = Column(Integer, nullable=False)
    leading_bid_id = Column(Integer, nullable=True)
    leading_per_shipment_bid_amount = Column(Integer, nullable=True)
    leading_contract_bid_amount = Column(Integer, nullable=True)
    distance = Column(Integer, nullable=False)
    rate_per_km = Column(Integer, nullable=False)
    rate_per_ton = Column(Integer, nullable=False)
    payment_terms = Column(String, nullable=False)
    payment_dates = Column(ARRAY(Date), nullable=False)
    status = Column(Enum("Open", "Closed"), default="Open")
    required_truck_type = Column(String, nullable=True)
    axle_configuration = Column(String, nullable=True)
    trailer_id = Column(Integer, nullable=False)
    origin_address = Column(String)
    complete_origin_address = Column(String)
    origin_city_province = Column(String)
    origin_country = Column(String)
    origin_region = Column(String)
    destination_address = Column(String)
    complete_destination_address = Column(String)
    destination_city_province = Column(String)
    destination_country = Column(String)
    destination_region = Column(String)
    route_preview_embed = Column(String)
    pickup_date = Column(Date)
    start_date = Column(Date)
    end_date = Column(Date)
    recurrence_frequency = Column(String) 
    recurrence_days = Column(String) 
    shipments_per_interval = Column(Integer)
    total_shipments = Column(Integer)
    shipment_dates = Column(ARRAY(Date), nullable=False)
    priority_level = Column(String, nullable=True)
    customer_reference_number = Column(String)
    average_shipment_weight = Column(Integer)
    commodity = Column(String)
    temperature_control = Column(String)
    hazardous_materials = Column(Boolean, nullable=False)
    packaging_quantity = Column(String)
    packaging_type = Column(String)
    pickup_number = Column(String)
    pickup_notes = Column(String)
    delivery_number = Column(String)
    delivery_notes = Column(String)
    estimated_transit_time = Column(String)
    pickup_appointment = Column(String)
    pickup_facility_name = Column(String, nullable=True)
    pickup_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    pickup_start_time = Column(Time, nullable=False)
    pickup_end_time = Column(Time, nullable=False)
    pickup_facility_notes = Column(String, nullable=True)
    pickup_first_name = Column(String, nullable=False)
    pickup_last_name = Column(String, nullable=False)
    pickup_phone_number = Column(String, nullable=False)
    pickup_email = Column(String, nullable=False)
    delivery_appointment = Column(String)
    delivery_facility_name = Column(String, nullable=True)
    delivery_scheduling_type = Column(String, nullable=False)  # e.g., "First come, First served"
    delivery_start_time = Column(Time, nullable=False)
    delivery_end_time = Column(Time, nullable=False)
    delivery_facility_notes = Column(String, nullable=True)
    delivery_first_name = Column(String, nullable=False)
    delivery_last_name = Column(String, nullable=False)
    delivery_phone_number = Column(String, nullable=False)
    delivery_email = Column(String, nullable=False)
    created_at = Column(DateTime, nullable=False, server_default=func.now())
    updated_at = Column(DateTime, nullable=True, onupdate=func.now())